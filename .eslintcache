[{"C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\App.js":"1","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\AppRoutes.js":"2","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\components\\User.js":"3","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\services\\UserService.js":"4","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\components\\NewUser.js":"5","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\components\\Users.js":"6","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\components\\UserForm.js":"7","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\reportWebVitals.js":"8","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\components\\EditUser.js":"9","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\actions\\alertAction.js":"10","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\index.js":"11","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\store\\store.js":"12","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\layouts\\Header.js":"13","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\reducers\\alertReducer.js":"14","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\utils\\functions.js":"15"},{"size":233,"mtime":1607211002911,"results":"16","hashOfConfig":"17"},{"size":762,"mtime":1607318582937,"results":"18","hashOfConfig":"17"},{"size":900,"mtime":1607318499600,"results":"19","hashOfConfig":"17"},{"size":566,"mtime":1607287033769,"results":"20","hashOfConfig":"17"},{"size":1458,"mtime":1607238576592,"results":"21","hashOfConfig":"17"},{"size":2587,"mtime":1607222637812,"results":"22","hashOfConfig":"17"},{"size":6264,"mtime":1607283173382,"results":"23","hashOfConfig":"17"},{"size":362,"mtime":1606930333703,"results":"24","hashOfConfig":"17"},{"size":4029,"mtime":1607238588044,"results":"25","hashOfConfig":"17"},{"size":35,"mtime":1607150588278,"results":"26","hashOfConfig":"17"},{"size":535,"mtime":1607151547631,"results":"27","hashOfConfig":"17"},{"size":145,"mtime":1607121123572,"results":"28","hashOfConfig":"17"},{"size":3130,"mtime":1607236154533,"results":"29","hashOfConfig":"17"},{"size":424,"mtime":1607197973200,"results":"30","hashOfConfig":"17"},{"size":0,"mtime":1607209172697,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yyvqjx",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\App.js",[],"C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\AppRoutes.js",["67"],"C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\components\\User.js",[],"C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\services\\UserService.js",["68"],"C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\components\\NewUser.js",["69","70"],"C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\components\\Users.js",["71","72","73"],"import { useState, useEffect } from 'react';\r\nimport { User } from './User';\r\nimport UserService from '../services/UserService';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { MESSAGE } from '../actions/alertAction';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Users extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            users: []\r\n        }\r\n    \r\n    }\r\n\r\n    componentDidMount(){\r\n        UserService.getUsers()\r\n        .then(response =>{\r\n            this.setState({\r\n                users: response.data\r\n            })\r\n        })\r\n    }\r\n\t handleDelete = (id) => {\r\n\t\tUserService.deleteUser(id)\r\n\t\t\t.then(() => {\r\n                let filterUsers = this.state.users.filter(u => u.id !== id);\r\n                this.setState({\r\n                    users: filterUsers\r\n                });\r\n                this.props.message({status:'SUCCESS',message:'Se ha eliminado con exito!!',show:true});\r\n\t\t\t}).catch(error => {\r\n                console.log(error)\r\n                this.props.message({status:'ERROR',message:'Ha ocurrido un error, no se ha podido eliminar!!',show:true});\r\n            });\r\n\t};\r\n    render(){\r\n        return(\r\n            <div>\r\n            <div className=\"container-create-user\">            \r\n            <h2>List users</h2>\r\n            <Link className=\"button info\" to=\"/users/new\">\r\n                Create User\r\n            </Link>\r\n            </div>\r\n        <table class=\"table-user\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>First name</th>\r\n                    <th>Last name</th>\r\n                    <th>Email</th>\r\n                    <th>Role</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    this.state.users.map((user, index) =>(\r\n                    <User \r\n                        key={`User-list-${user.id}`}\r\n                        user={user}\r\n                        index={index + 1}\r\n                        deleteFn={this.handleDelete}\r\n                        />\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>   \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchProps = dispatch => ({\r\n    message(alert){\r\n        dispatch({\r\n            type: MESSAGE,\r\n            payload: alert\r\n        });\r\n}\r\n})\r\n\r\nconst mapStateToProps = state =>({\r\n\r\n})\r\n\r\nexport default connect(null, mapDispatchProps)(Users);\r\n","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\components\\UserForm.js",["74","75"],"import { useState } from 'react';\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport clsx from 'clsx';\r\n\r\n\r\nexport const UserForm = ({onSubmit, onCancel, user, title,btnValue}) =>{\r\n\r\nconst formik = useFormik({\r\n    initialValues:{\r\n        firstName:user?user.firstName:'',\r\n        lastName:user?user.lastName:'',\r\n        email:user?user.email:'',\r\n        role:user?user.role:''\r\n    },\r\n    onSubmit: (values) => {\r\n        onSubmit(values);\r\n    },\r\n     validationSchema: Yup.object({\r\n        firstName: Yup.string()\r\n        .min(5,'El nombre tiene que tener 5 caracteres minimo')\r\n        .max(20,'El nombre tiene que tener 20 caracteres maximo')\r\n        .required('El nombre es requerido'),\r\n        lastName: Yup.string()\r\n        .min(5,'El apellido tiene que tener 5 caracteres minimo')\r\n        .max(20,'El apellido tiene que tener 20 caracteres maximo')\r\n        .required('El apellido es requerido'),\r\n        email: Yup.string()\r\n        .required('El email es requerido'),\r\n        role:Yup.string()\r\n        .min(5,'El rol tiene que tener 5 caracteres minimo')\r\n        .max(20,'El rol tiene que tener 20 caracteres maximo')\r\n        .required('El rol es requerido')\r\n    }) \r\n});\r\nconst {\r\n    errors, \r\n    touched, \r\n    isValid, \r\n    values, \r\n    handleChange,\r\n    handleSubmit,\r\n    handleBlur} = formik;\r\n    return(\r\n        <div className=\"container-form-user\">\r\n            <h2 class=\"title-form\">\r\n                {title}\r\n            </h2>\r\n            <pre>\r\n                Error: {JSON.stringify(formik.errors.name)}\r\n            </pre>\r\n            <pre>\r\n                Touched: {JSON.stringify(formik.touched.name)}\r\n            </pre>\r\n            <form onSubmit={handleSubmit} class=\"form\">\r\n                <div className=\"container-input\">\r\n                    <label class=\"label-user-form\">First Name</label>\r\n                    <input \r\n                    className={\r\n                        clsx(\r\n                            'input',\r\n                            {\r\n                                'input--error':errors.firstName && touched.firstName,\r\n                                'input--success':!errors.firstName && touched.firstName\r\n                            }\r\n                        )}\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        value={values.firstName}\r\n                        onChange={handleChange}\r\n                        onBlur = {handleBlur}\r\n                        placeholder=\"First name\"\r\n                        />\r\n                </div>\r\n                {errors.firstName && touched.firstName ? (\r\n                    <p class=\"text-error\">\r\n                        {errors.firstName}\r\n                    </p>\r\n                ) : null}\r\n                <div className=\"container-input\">\r\n                <label class=\"label-user-form\">last Name</label>\r\n                    <input \r\n                    className={\r\n                        clsx(\r\n                            'input',\r\n                            {\r\n                                'input--error':errors.lastName && touched.lastName,\r\n                                'input--success':!errors.lastName && touched.lastName\r\n                            }\r\n                        )}\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        value={values.lastName}\r\n                        onChange={handleChange}\r\n                        onBlur = {handleBlur}\r\n                        placeholder=\"Last name\"\r\n                        />\r\n                </div>\r\n                {errors.lastName && touched.lastName ? (\r\n                    <p class=\"text-error\">\r\n                        {errors.lastName}\r\n                    </p>\r\n                ) : null}\r\n                <div className=\"container-input\">\r\n                <label class=\"label-user-form\">Email</label>\r\n                    <input \r\n                    className={\r\n                        clsx(\r\n                            'input',\r\n                            {\r\n                                'input--error':errors.email && touched.email,\r\n                                'input--success':!errors.email && touched.email\r\n                            }\r\n                        )}\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        onBlur = {handleBlur}\r\n                        placeholder=\"Email\"\r\n                        />\r\n                </div>\r\n                {errors.email && touched.email ? (\r\n                    <p class=\"text-error\">\r\n                        {errors.email}\r\n                    </p>\r\n                ) : null}\r\n                <div className=\"container-input\">\r\n                <label class=\"label-user-form\">Role</label>\r\n                    <input \r\n                    className={\r\n                        clsx(\r\n                            'input',\r\n                            {\r\n                                'input--error':errors.role && touched.role,\r\n                                'input--success':!errors.role && touched.role\r\n                            }\r\n                        )}\r\n                        type=\"text\"\r\n                        name=\"role\"\r\n                        value={values.role}\r\n                        onChange={handleChange}\r\n                        onBlur = {handleBlur}\r\n                        placeholder=\"Role\"\r\n                        />\r\n                </div>\r\n                {errors.role && touched.role ? (\r\n                    <p class=\"text-error\">\r\n                        {errors.role}\r\n                    </p>\r\n                ) : null}\r\n                <div className=\"container-input group-button\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button className=\"button btn-info\"\r\n\t\t\t\t\t\t\tdisabled={!formik.isValid}>\r\n\t\t\t\t\t\t\t{btnValue}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n                        <button className=\"button btn-danger\" type=\"button\" onClick={onCancel}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\reportWebVitals.js",[],"C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\components\\EditUser.js",["76"],"/* import UserService from \"../services/UserService\";\r\n\r\nimport { useParams,useHistory } from 'react-router-dom';\r\nimport { UserForm } from \"./UserForm\";\r\nimport { useState, useEffect} from 'react';\r\n\r\n\r\nexport const EditUser = ({match}) =>{\r\n    const [user, setUser]  =useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const { userId } = match.params;\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try{\r\n                const { data } = await UserService.getUserById(userId);\r\n                setUser(data);\r\n                setLoading(true);\r\n                console.log(\"Usuario > \",data);\r\n\r\n                }\r\n                catch ( err){\r\n                console.log('Error > ', err);\r\n                }\r\n            }\r\n        )()\r\n    }, [])\r\n    const history = useHistory();\r\n    console.log('History >', history);\r\n    const handleSubmit = (user) =>{\r\n        console.log(\"Usuario Id: \", userId);\r\n        UserService.updateUser({...user, id:userId})\r\n        .then(response =>{\r\n            history.replace('/');\r\n        })\r\n    };\r\n    const goBack  = () =>{\r\n        history.goBack();\r\n    }\r\n\r\n    return(\r\n\t\t<div>\r\n\t\t\t<h2>Editar Usuario</h2>\r\n           \r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n                {loading ? (<UserForm \r\n                    onSubmit= { handleSubmit }\r\n                    onCancel = {goBack}\r\n                    user = {user}\r\n                    />):<div>Cargando...</div>\r\n                }\r\n\t\t\t\t</div>\r\n            </div>\r\n            \r\n\t\t</div>\r\n    )\r\n\r\n} */\r\nimport React, { Component } from 'react';\r\nimport UserService from \"../services/UserService\";\r\nimport { UserForm } from \"./UserForm\";\r\nimport { connect } from 'react-redux';\r\nimport { MESSAGE } from '../actions/alertAction';\r\n\r\nclass  EditUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        console.log('userId > ', props.match.params);\r\n        const  { userId }   = props.match.params;\r\n\r\n        this.state={\r\n            user: null,\r\n            loading: false,\r\n            userId : userId\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        (async () => {\r\n            try{\r\n                const { data } = await UserService.getUserById(this.state.userId);\r\n                this.setState({\r\n                    user:data,\r\n                    loading:true\r\n                })\r\n                console.log(\"Usuario > \",data);\r\n                }\r\n                catch ( err){\r\n                console.log('Error > ', err);\r\n                }\r\n            }\r\n        )()\r\n    }\r\n\r\n/*     const history = useHistory();\r\n    console.log('History >', history); */\r\n\r\n     handleSubmit = (user) =>{\r\n        console.log(\"Usuario Id: \", this.state.userId);\r\n        UserService.updateUser({...user, id: this.state.userId})\r\n        .then(response =>{\r\n            this.props.message({status:'SUCCESS',message:'Se ha actualizado con exito!!',show:true});\r\n            this.props.history.replace('/users');\r\n            // history.replace('/');\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            this.props.message({status:'ERROR',message:'Ha ocurrido un error, no se ha podido actualizar!!',show:true});\r\n            this.props.history.replace('/users');\r\n        });\r\n    };\r\n\r\n     goBack  = () =>{\r\n        //this.props.history.goBack();\r\n        this.props.history.push('/users');\r\n    }\r\n    render(){\r\n    return(\r\n                this.state.loading ? (<UserForm \r\n                    onSubmit= { this.handleSubmit }\r\n                    onCancel = { this.goBack }\r\n                    user = {this.state.user}\r\n                    title = \"Edit user\"\r\n                    btnValue = \"Editar\"\r\n                    />):<div>Cargando...</div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapDispatchProps = dispatch => ({\r\n    message(alert){\r\n        dispatch({\r\n            type: MESSAGE,\r\n            payload: alert\r\n        });\r\n}\r\n})\r\n\r\nconst mapStateToProps = state =>({\r\n\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchProps)(EditUser);","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\actions\\alertAction.js",[],"C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\index.js",["77"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\t<Provider store={store} >\n\t\t<App />\n\t</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\store\\store.js",[],"C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\layouts\\Header.js",["78","79","80"],"C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\reducers\\alertReducer.js",["81","82"],"import { MESSAGE } from \"../actions/alertAction\";\r\n\r\n\r\nconst initialState = {\r\n    alert: new Object({\r\n        status:'',\r\n        message:'',\r\n        show:false\r\n    })\r\n}\r\n\r\nexport default (state =initialState, action)=>{\r\n    switch(action.type){\r\n        case MESSAGE:\r\n            return {\r\n                ...state,\r\n                alert: action.payload\r\n            }\r\n        \tdefault:\r\n\t\t\treturn state;\r\n    }\r\n}","C:\\Users\\CPAJARES\\Desktop\\ExamenesFrontend\\examen-react\\src\\utils\\functions.js",[],{"ruleId":"83","severity":1,"message":"84","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":26,"column":1,"nodeType":"89","endLine":32,"endColumn":2},{"ruleId":"90","severity":1,"message":"91","line":9,"column":5,"nodeType":"92","messageId":"93","endLine":11,"endColumn":6},{"ruleId":"83","severity":1,"message":"94","line":52,"column":7,"nodeType":"85","messageId":"86","endLine":52,"endColumn":22},{"ruleId":"83","severity":1,"message":"95","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":18},{"ruleId":"83","severity":1,"message":"96","line":1,"column":20,"nodeType":"85","messageId":"86","endLine":1,"endColumn":29},{"ruleId":"83","severity":1,"message":"94","line":88,"column":7,"nodeType":"85","messageId":"86","endLine":88,"endColumn":22},{"ruleId":"83","severity":1,"message":"95","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":18},{"ruleId":"83","severity":1,"message":"97","line":40,"column":5,"nodeType":"85","messageId":"86","endLine":40,"endColumn":12},{"ruleId":"83","severity":1,"message":"94","line":141,"column":7,"nodeType":"85","messageId":"86","endLine":141,"endColumn":22},{"ruleId":"98","severity":2,"message":"99","line":9,"column":19,"nodeType":"85","messageId":"100","endLine":9,"endColumn":24},{"ruleId":"83","severity":1,"message":"101","line":8,"column":11,"nodeType":"85","messageId":"86","endLine":8,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":26,"column":36,"nodeType":"104","messageId":"105","endLine":26,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":27,"column":34,"nodeType":"104","messageId":"105","endLine":27,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":5,"column":12,"nodeType":"108","messageId":"109","endLine":9,"endColumn":7},{"ruleId":"87","severity":1,"message":"110","line":12,"column":1,"nodeType":"89","endLine":22,"endColumn":2},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'mapStateToProps' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'isValid' is assigned a value but never used.","no-undef","'store' is not defined.","undef","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","Assign arrow function to a variable before exporting as module default"]